package label_derivation;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class ReadProgram {
	
	public String findTarget(String statement)
	{
		String expression[]=statement.split("\\=");
		return expression[0];
	}
	
	public String[] findOperands(String statement)
	{
		String expression[]=statement.split("\\=");
		String temp=expression[1].replaceAll("[^0-9,a-z,A-Z]", " ");
		String operands[]=temp.split(" ");
		return operands;
	}
	
	public Label readAndCreateLabels(String label)
	{
		String owner;
		ArrayList<String> readers=new ArrayList<String>();
		ArrayList<String> writers=new ArrayList<String>();
		
		String parts[]=label.split("[{}()]");
		owner=parts[1].substring(0, parts[1].indexOf(','));
		
		char reader_set[]=parts[2].toCharArray();
		String reader="";
		for(char ch: reader_set)
		{
			int flag=0;
			if(ch!=',')
			{
				reader=reader+ch;
			}
			else
				flag=1;
			
			if(flag==1)
			{
				readers.add(reader);
				reader="";
			}
		}
		readers.add(reader);
		
		char writer_set[]=parts[4].toCharArray();
		String writer="";
		for(char ch: writer_set)
		{
			int flag=0;
			if(ch!=',')
			{
				writer=writer+ch;
			}
			else
				flag=1;
			
			if(flag==1)
			{
				writers.add(writer);
				writer="";
			}
		}
		writers.add(writer);
		
		Label new_label=new Label(owner,readers,writers);
		return new_label;
		
	}
	
	public static void main(String[] args) {
		
		ReadProgram main_program=new ReadProgram();
		Map<String,Label> static_labels = new HashMap<String,Label>();
		Map<String,Label> dynamic_labels = new HashMap<String,Label>();
		
		try{
			FileInputStream fstream=new FileInputStream(args[1]);
			BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
			String line;
			while((line=br.readLine())!=null)
			{
				String tokens[]=line.split("\\=");
				static_labels.put(tokens[0], main_program.readAndCreateLabels(tokens[1]));
			}
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
	}
		
}
